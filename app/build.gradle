apply plugin: 'com.android.application'
apply plugin: 'com.noveogroup.android.check'
apply from: './jacoco.gradle'

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.iitp.njack.iitp_connect"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }

    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
}

configurations.all { config ->
    resolutionStrategy {
        force 'com.android.support:multidex:1.0.3'
    }
    if (config.name.contains('UnitTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

check {
    abortOnError false
    findbugs { skip true }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation 'com.android.support:multidex:1.0.3'

    // Architecture components
    implementation "android.arch.lifecycle:runtime:$architectureComponentsVersion"
    implementation "android.arch.lifecycle:extensions:$architectureComponentsVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$architectureComponentsVersion"

    // Room
    def room_version = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    testImplementation "android.arch.persistence.room:testing:$room_version"

    // Lombok
    implementation "org.projectlombok:lombok:$rootProject.lombokVersion"
    testImplementation "org.projectlombok:lombok:$rootProject.lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$rootProject.lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$rootProject.lombokVersion"

    // Retrofit
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-jackson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation 'com.github.jasminb:jsonapi-converter:0.9'

    // Butterknife
    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    //Timber
    implementation 'com.jakewharton.timber:timber:4.7.0'

    // Dagger2
    implementation "com.google.dagger:dagger:${rootProject.daggerVersion}"
    implementation "com.google.dagger:dagger-android:${rootProject.daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${rootProject.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${rootProject.daggerVersion}"

    // Rx Java
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'

    // Jackson
    implementation "com.fasterxml.jackson.core:jackson-core:$rootProject.jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$rootProject.jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$rootProject.jacksonVersion"

    // Stetho
    implementation "com.facebook.stetho:stetho:$rootProject.stetho"
    implementation "com.facebook.stetho:stetho-okhttp3:$rootProject.stetho"

    // ThreeTen
    implementation "com.jakewharton.threetenabp:threetenabp:$rootProject.threetenbpVersion"
    testImplementation 'org.threeten:threetenbp:1.3.8'

    // Glide
    implementation("com.github.florent37:glidepalette:2.1.2") {
        transitive = false
    }
    implementation "com.github.bumptech.glide:glide:$rootProject.glide"
    implementation "com.github.bumptech.glide:okhttp3-integration:$rootProject.glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glide"

    // Leak Canary
    def leak_canary = '1.6.3'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary"

    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.3'
    implementation 'com.firebaseui:firebase-ui-auth:4.2.0'
    implementation 'com.google.firebase:firebase-database:16.0.2'

    // Facebook
    implementation 'com.facebook.android:facebook-android-sdk:4.39.0'

    //Circular ImageView
    implementation 'de.hdodenhof:circleimageview:3.0.0'

    //Testing
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-inline:2.23.4'
    testImplementation 'org.json:json:20180813'
    testImplementation "org.robolectric:robolectric:$rootProject.roboelectric"

    //youtube
    implementation 'com.google.android.gms:play-services-auth:16.0.0'
    implementation 'pub.devrel:easypermissions:2.0.1'
    implementation('com.google.api-client:google-api-client-android:1.28.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-youtube:v3-rev20180511-1.28.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.google.http-client:google-http-client-gson:1.28.0'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    //picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    testImplementation "android.arch.core:core-testing:$rootProject.architectureComponentsVersion"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion rootProject.supportLibraryVersion
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
